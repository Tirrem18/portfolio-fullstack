@page
@model Portfolio.Web.Pages.IndexModel
@{
    ViewData["Title"] = "Home";
}


@section FullWidth {
    <div class="hero-wrapper">
        <div class="center-box">
            <div class="split-box">
                <div class="split-section side-filler"></div> <!-- Left filler -->

                <div class="split-section middle">
                    <div class="hero-intro-wrapper">
                        <p class="hero-tagline">
                            First-Class Software Engineering graduate with strong foundations and a passion for coding meaningful solutions
                        </p>
                        <h1 class="hero-name">Jacob Merritt</h1>
                        <p class="hero-roles">Full Stack Developer | Recent Graduate</p>

                        <div class="hero-buttons">
                            <a href="/projects" class="btn primary-btn">View Projects</a>
                            <a href="/files/CV - Jacob Merritt.pdf" class="btn secondary-btn" download>Download CV</a>
                        </div>
                    </div>
                </div>

                <div class="split-section image">
                    <div class="hero-image">
                        <img id="heroFace" src="/images/PicDarkOrange.jpg" alt="Hero Image" />

                    </div>
                </div>

                <div class="split-section side-filler"></div> <!-- Right filler -->
            </div>
        </div>
    </div>

    <!-- Section 2 - Full Width Block -->
    <div class="section-2-wrapper">
        <div class="section-2-inner">
            <h2 class="section-2-title">Core Projects</h2>
            <div class="section-2-projects">
            </div>
        </div>
    </div>


    <div class="section-3-wrapper section-3">
        <div class="left-box">
            @if (Model.Logs.FirstOrDefault() is DevLog latestLog)
            {
                <div class="latest-log-content">
                    <p class="latest-log-date">Most Recent Log - @latestLog.Date.ToString("MMMM dd, yyyy")</p>
                    <p class="latest-log-summary">@latestLog.Summary</p>
                    <p class="latest-log-description">@latestLog.Description</p>

                </div>
            }
        </div>
        <div class="right-box">
            <div class="devlog-content">
                <h2 class="devlog-title">Daily DevLogs</h2>
                <p class="devlog-paragraph">
                    Since graduating, I’ve made it a priority to grow not just as a developer, but as a thinker and problem-solver.
                    Keeping a daily dev log has become a way to pause, reflect, and track my progress.
                </p>
                <a class="view-all-link" href="/devlogs">View All Dev Logs</a>
            </div>
        </div>
    </div>


    <div id="aboutMeSection" class="about-wrapper">
        <div class="about-container">
            <div class="about-text">
                <h2 class="about-title">About Me</h2>
                <p class="about-intro">
                    I’m Jacob, a full stack developer who loves turning complex problems into clean, thoughtful solutions.
                </p>
                <p class="about-paragraph">
                    I’m from Billingham, a quiet little town near Middlesbrough (home of the legendary parmo). It’s where I went to school, college, and university — and where I went from building my first Scratch game as a child, to graduating with a degree in Software Engineering recently.
                </p>
                <p class="about-paragraph">
                    For me, development isn’t just about making things work, it’s about how they feel. I’ve worked across web, mobile, and cloud platforms, always aiming for that sweet spot between structure and creativity.
                </p>
                <p class="about-paragraph">
                    Whether it’s an IoT system, a gamified health app, or a clean front-end (like this portfolio site I designed and built myself), I care about creating things that make life a little easier, smarter, or just nicer to use.
                </p>
                <p class="about-callout"><strong>There’s more to my story — explore both sides.</strong></p>
                <div class="about-buttons">
                    <a href="/journey" class="btn outline-btn">My Developer Journey</a>
                    <a href="/journey" class="btn tertiary-btn">The Personal Side</a>
                </div>
            </div>
            <div class="about-photo">
                <img id="AboutMee" src="/images/AboutMe.jpg" alt="Illustration of Jacob" />
            </div>
        </div>
    </div>

<footer class="custom-footer">
    <div class="footer-blocks">
        <a href="https://www.linkedin.com/in/jacobmerritt/" target="_blank" rel="noopener noreferrer" class="footer-tile">
            LinkedIn
        </a>
        <a href="https://github.com/Tirrem18" target="_blank" rel="noopener noreferrer" class="footer-tile">
            GitHub
        </a>
        <a href="/contact" class="footer-tile">
            Email
        </a>
    </div>
    <div class="footer-info">
        <p class="footer-copy">&copy; 2025 Jacob Merritt. All rights reserved.</p>
    </div>
</footer>

    <script type="module" src="/js/indexProjects.js"></script>

    <script>
        const imageSection = document.querySelector('.split-section.image');
        const heroImage = document.getElementById('heroFace');

        // Hover swap
        imageSection.addEventListener('mouseenter', () => {
            heroImage.src = '/images/LightOrange.jpg';
        });

        imageSection.addEventListener('mouseleave', () => {
            heroImage.src = '/images/PicDarkOrange.jpg';
        });


                imageSection.addEventListener('click', () => {
            const aboutSection = document.getElementById('aboutMeSection');
            if (aboutSection) {
                aboutSection.scrollIntoView({ behavior: 'smooth' });
            }
        });

        imageSection.style.cursor = 'pointer';
    </script>




}
